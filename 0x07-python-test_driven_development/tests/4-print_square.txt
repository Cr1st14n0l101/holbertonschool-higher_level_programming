The ``4-print_square`` module
======================

Using ''print_square''
-------------------
First import
''print_square'' from the ''4-print_square'' module:
	>>> print_square = __import__('4-print_square').print_square

Base case:

	>>> print_square(4)
	####
	####
	####
	####

No arguments:

	>>> print_square()
	Traceback (most recent call last):
		...
	TypeError: print_square() missing 1 required positional argument: 'size'

Float case:

	>>> print_square(10.9)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########

Argument 0:

	>>> print_square(0)


Argument 1:

	>>> print_square(1)
	#

Argument float too small:

	print_square(0.0000000001)
	#

Argument is a string:

	>>> print_square("string")
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

Arguments is a negative integer:

	>>> print_square(-5)
	Traceback (most recent call last):
		...
	ValueError: size must be >= 0

Arguments is a negative float:

	>>> print_square(-2.33333)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer

Argument is a infinite:

	>>> print_square(float('inf'))
	Traceback (most recent call last):
		...
	OverflowError: cannot convert float infinity to integer

Argument Not a Number:

	>>> print_square(float('nan'))
	Traceback (most recent call last):
		...
	ValueError: cannot convert float NaN to integer

Argument is None:

	>>> print_square(None)
	Traceback (most recent call last):
		...
	TypeError: size must be an integer
